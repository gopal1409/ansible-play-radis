---
- #this minus is required in yaml it indicate list of items. Playbook contains a list of play and every play will be a dictionary
#host: where you want to run your playbook
  hosts: jump
  
#vars: variable that will apply to the play
  vars: #is a keywoad
    motd_centos: "Welcome to Redhat ansible rocks2\n"
    motd_ubuntu: "Welcome to ubunut ansible rock2\n"
  tasks:  
    - name: install apache
      shell: if ps -eaf| egrep 'apache2'| grep -v grep > /dev/null; then echo 'process_running'; else echo 'process_not_running'; fi
      ignore_errors: true 
      register: app_proc_check
    - debug: msg="{{ app_proc_check.stdout }}"
    - name: Decisiong point to start patching
      fail: 
        msg="{{inventory_hostname}} having running appliucation please stop it then attempt patching"
      when: app_proc_check.stdout == "process_running"
    - name: current kernal version 
      shell: uname -r 
      register: curr_ker
    - debug: msg="{{ curr_ker.stdout }}"
    - name: intiatiating patching
      apt:
        upgrade: yes 
        update_cache: yes
      register: apt_update 
    - debug: msg="kernal has been update"
    - name: check if reboot is required 
      shell: kernel_new=$(uname -msr | head -1| awk '{print $1}'| sed 's/kernel-//g'); kernel_now=$(uname -r); if [[ $kernel_new != $kernel_now ]]; then echo "reboot is required"; else echo "reboot is not required"; fi
      ignore_errors:
      register: reboot_check 
    - debug: msg="{{reboot_check.stdout}}"
    - name: Reboot the system after patching
      shell: "shutdown -r now"
      async: 1
      poll: 0
    - name: wait for the system to come up 
      pause:
        minutes: 1
    - name: new kernal version 
      shell: uname -r 
      register: new_ker
    - debug: msg="new kernal version is {{new_ker.stdout}} and old kernal version was {{curr_ker.stdout}}"
    
